name    = OpenVZ
author  = Alan Young <harleypig@gmail.com>
license = Perl_5
copyright_holder = Alan Young
copyright_year   = 2012
;version = 0.01

;[ReportPhase/PhaseBegins]

;Phase: Version
[Git::NextVersion]
first_version = 0.01

;Phase: MetaData
[MetaNoIndex]
directory = t
directory = xt

;Phase: ExecFiles
[ExecDir]

;Phase: ShareDir
[ShareDir]

;Phase: Gather Files
; see https://metacpan.org/module/Dist::Zilla::PluginBundle::DAGOLDEN for
; annotation, add my own.  Break out tests into dist, author and release
; tests?
[GatherDir]
[HasVersionTests]
[License]
[MetaJSON]
[MetaTests]
[MetaYAML]
[NoSmartCommentsTests]
[NoTabsTests]
[PerlTidy]
[PodCoverageTests]
[PodSyntaxTests]
[ReportVersions]
[Test::CheckChanges]
[Test::CheckDeps]
[Test::CheckManifest]
[Test::Compile]
[Test::CPAN::Changes]
[Test::CPAN::Meta::JSON]
;[Test::DistManifest] This isn't working correctly.
[Test::EOL]
[Test::Kwalitee]
[Test::Legal]
[Test::MinimumVersion]
[Test::Pod::No404s]
[Test::Pod::LinkCheck]
;[Test::Perl::Critic]
[Test::Portability]
[Test::Synopsis]
[Test::UnusedVars] ; requires 5.10
[Test::UseAllModules]
[Test::Version]

[Test::PodSpelling]
wordlist = Pod::Wordlist
spell_cmd = aspell list
;stopwords = 
stopwords = LICENCE
stopwords = STDERR
stopwords = STDOUT
stopwords = ipadd
stopwords = params
stopwords = subcommand
stopwords = subcommands
stopwords = CTID
stopwords = applyconfig
stopwords = avnumproc
stopwords = bootorder
stopwords = chkpnt
stopwords = cpulimit
stopwords = cpumask
stopwords = cpus
stopwords = cpuunits
stopwords = ctid
stopwords = dcachesize
stopwords = devnodes
stopwords = dgramrcvbuf
stopwords = diskinodes
stopwords = diskspace
stopwords = hostname
stopwords = ioprio
stopwords = ipdel
stopwords = ips
stopwords = iptables
stopwords = kmemsize
stopwords = lockedpages
stopwords = nameserver
stopwords = noatime
stopwords = numfile
stopwords = numflock
stopwords = numiptent
stopwords = numothersock
stopwords = numproc
stopwords = numpty
stopwords = numsiginfo
stopwords = numtcpsock
stopwords = onboot
stopwords = oomguarpages
stopwords = ostemplate
stopwords = othersockbuf
stopwords = physpages
stopwords = privvmpages
stopwords = quotainit
stopwords = quotaoff
stopwords = quotaon
stopwords = quotatime
stopwords = quotaugidlimit
stopwords = runscript
stopwords = searchdomain
stopwords = setmode
stopwords = shmpages
stopwords = swappages
stopwords = tcprcvbuf
stopwords = tcpsndbuf
stopwords = umount
stopwords = userpasswd
stopwords = vmguarpages

[Manifest] ; should be as late as possible

;Phase: Prune Files
[PruneCruft]
[PruneFiles]
filename = cover
filename = dist.ini
filename = docs
filename = weaver.ini
match = ^\..*\.sw.$ ; skip any vim swap files
[ManifestSkip]

;Phase: Munge Files
[FileKeywords]
plugins = Standard
[ExtraTests]
[NextRelease]
[PodWeaver]
[OurPkgVersion]

;Phase: Register Preqreqs
[Prereqs]
[AutoPrereqs]
[ModuleBuild]

;Phase: Install Tool
[ReadmeFromPod]
[InstallGuide]
[CheckChangeLog]

;Phase: After Build
[CopyReadmeFromBuild]

;Phase: Before Release
[Git::Check]
allow_dirty = dist.ini
allow_dirty = weaver.ini
allow_dirty = README
[TestRelease]
[ConfirmRelease]

;Phase: Releaser
; Uncomment [Twitter] when switching to [UploadTOCPAN]
[FakeRelease]
;[UploadToCPAN]

;Phase: After Release
[Git::Commit]
[Git::CommitBuild]
branch = build/%b
release_branch = release
message = %h
[Git::Tag]
tag_format = v%v
branch = release
[Git::Push]
push_to = origin
push_to = origin HEAD:refs/head/release
push_to = origin HEAD:refs/notes/commits
[Clean]
;[Twitter]
;tweet = Released {{$DIST}}-{{$VERSION}}{{$TRIAL}} {{$URL}} - {{$ABSTRACT}}
;hash-tags = #perl #cpan

;[ReportPhase/PhaseEnds]
